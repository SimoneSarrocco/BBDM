# Latent Brownian Bridge Diffusion Model Template(Latent Space)
runner: "BBDMRunner"
training:
  n_epochs: 1000
  n_steps: 990000
  save_interval: 2
  sample_interval: 2
  validation_interval: 2
  accumulate_grad_batches: 4

testing:
  clip_denoised: False
  sample_num: 170

data:
  dataset_name: 'data'
  dataset_type: 'custom_aligned'
  dataset_config:
    dataset_path: '/home/simone.sarrocco/thesis/project/models/diffusion_model/BBDM/data'
    image_size: 496
    channels: 1
    to_normal: False
    flip: True
  train:
    batch_size: 8
    shuffle: True
  val:
    batch_size: 8
    shuffle: True
  test:
    batch_size: 8
    # shuffle: False

model:
  model_name: "LBBDM-f16-4th" # part of result path
  model_type: "LBBDM" # specify a module
  latent_before_quant_conv: False
  normalize_latent: False
  only_load_latent_mean_std: False
  # model_load_path:  # model checkpoint path
  # optim_sche_load_path:  # optimizer scheduler checkpoint path

  EMA:
    use_ema: True
    ema_decay: 0.995
    update_ema_interval: 8 # step
    start_ema_step: 30000

  CondStageParams:
    n_stages: 4
    in_channels: 3
    out_channels: 8

  VQGAN:
    params:
      ckpt_path: '/home/simone.sarrocco/thesis/project/models/diffusion_model/GenerativeModels/tutorials/generative/2d_vqgan/only_pseudoart100_2nd/checkpoints/vqgan_epoch_3.ckpt'
      embed_dim: 8
      n_embed: 16384
      ddconfig:
        double_z: false
        z_channels: 8
        resolution: 512
        in_channels: 1
        out_ch: 1
        ch: 128
        ch_mult: !!python/tuple
          - 1
          - 1
          - 2
          - 2
          - 4
        num_res_blocks: 2
        attn_resolutions:
          - 16
        dropout: 0.0

      lossconfig:
        target: torch.nn.Identity

  BB:
    optimizer:
      weight_decay: 0.000
      optimizer: 'Adam'
      lr: 1.e-4
      beta1: 0.9

    lr_scheduler:
      factor: 0.5
      patience: 3000
      threshold: 0.0001
      cooldown: 3000
      min_lr: 5.e-7

    params:
      mt_type: 'linear' # options {'linear', 'sin'}
      objective: 'grad' # options {'grad', 'noise', 'ysubx'}
      loss_type: 'l1' # options {'l1', 'l2'}

      skip_sample: True
      sample_type: 'linear' # options {"linear", "sin"}
      sample_step: 200

      num_timesteps: 1000 # timesteps
      eta: 1.0 # DDIM reverse process eta
      max_var: 1.0 # maximum variance

      UNetParams:
        image_size: 32
        in_channels: 8
        model_channels: 32
        out_channels: 8
        num_res_blocks: 2
        attention_resolutions: !!python/tuple
          - 16
          - 8
          - 4
        channel_mult: !!python/tuple
          - 1
          - 4
          - 8
        conv_resample: True
        dims: 2
        num_heads: 8
        num_head_channels: 64
        use_scale_shift_norm: True
        resblock_updown: True
        use_spatial_transformer: False
        context_dim:
        condition_key: "nocond" # options {"SpatialRescaler", "first_stage", "nocond"}